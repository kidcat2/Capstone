import geopandas as gpd
import pandas as pd
import matplotlib.pyplot as plt
from shapely.geometry import Polygon, LineString, Point
import requests
import os
import glob
import sys
from tqdm import tqdm

"""
전라북도 이외 지역

11: [(680, 11680), (740, 11740), (305, 11305), (500, 11500), (620, 11620), (215, 11215), (530, 11530), (545, 11545), (350, 11350), (320, 11320), (230, 11230), (590, 11590), 
         (440, 11440), (410, 11410), (650, 11650), (200, 11200), (290, 11290), (710, 11710), (470, 11470), (560, 11560), (170, 11170), (380, 11380), (110, 11110), (140, 11140), 
         (260, 11260)],  # Seoul
    26: [(440, 26440), (410, 26410), (710, 26710), (290, 26290), (170, 26170), (260, 26260), (230, 26230), (320, 26320), (530, 26530), (380, 26380), (140, 26140), (500, 26500), 
         (470, 26470), (200, 26200), (110, 26110), (350, 26350)],  # Busan
    27: [(200, 27200), (290, 27290), (710, 27710), (140, 27140), (230, 27230), (170, 27170), (260, 27260), (110, 27110), (720, 27720)],  # Daegu
    28: [(710, 28710), (245, 28245), (170, 28177), (200, 28200), (140, 28140), (237, 28237), (260, 28260), (185, 28185), (720, 28720), (110, 28110)],  # Incheon
    29: [(200, 29200), (155, 29155), (110, 29110), (170, 29170), (140, 29140)],  # Gwangju
    30: [(230, 30230), (110, 30110), (170, 30170), (200, 30200), (140, 30140)],  # Daejeon
    31: [(140, 31140), (170, 31170), (200, 31200), (710, 31710), (110, 31110)],  # Ulsan
    36: [(110, 36110)],  # Sejong
    41: [(820, 41820), (281, 41281), (285, 41285), (287, 41287), (290, 41290), (210, 41210), (610, 41610), (310, 41310), (410, 41410), (570, 41570), (360, 41360), (250, 41250), 
         (197, 41190), (199, 41190), (195, 41190), (135, 41135), (131, 41131), (133, 41133), (113, 41113), (117, 41117), (111, 41111), (115, 41115), (390, 41390), (273, 41273), 
         (271, 41271), (550, 41550), (173, 41173), (171, 41171), (630, 41630), (830, 41830), (670, 41670), (800, 41800), (370, 41370), (463, 41463), (465, 41465), (461, 41461), 
         (430, 41430), (150, 41150), (500, 41500), (480, 41480), (220, 41220), (650, 41650), (450, 41450), (590, 41590)],  # Gyeonggi
    42: [(150, 51150), (820, 51820), (170, 51170), (230, 51230), (210, 51210), (800, 51800), (830, 51830), (750, 51750), (130, 51130), (810, 51810), (770, 51770), (780, 51780), 
         (110, 51110), (190, 51190), (760, 51760), (720, 51720), (790, 51790), (730, 51730)],  # Gangwon(~2022)
    51: [(150, 51150), (820, 51820), (170, 51170), (230, 51230), (210, 51210), (800, 51800), (830, 51830), (750, 51750), (130, 51130), (810, 51810), (770, 51770), (780, 51780), 
         (110, 51110), (190, 51190), (760, 51760), (720, 51720), (790, 51790), (730, 51730)],  # Gangwon(2023~)
    43: [(760, 43760), (800, 43800), (720, 43720), (740, 43740), (730, 43730), (770, 43770), (150, 43150), (745, 43745), (750, 43750), (710, 43130), (111, 43111), (112, 43112), 
         (114, 43114), (113, 43113), (130, 43130)],  # Chungcheongbuk-do
    44: [(250, 44250), (150, 44150), (710, 44710), (230, 44230), (270, 44270), (180, 44180), (760, 44760), (210, 44210), (770, 44770), (200, 44200), (810, 44810), (131, 44131), 
         (133, 44133), (790, 44790), (825, 44825), (800, 44800)],  # Chungcheongnam-do
    46: [(810, 46810), (770, 46770), (720, 46720), (230, 46230), (730, 46730), (170, 46170), (710, 46710), (110, 46110), (840, 46840), (780, 46780), (150, 46150), (910, 46910), 
         (130, 46130), (870, 46870), (830, 46830), (890, 46890), (880, 46880), (800, 46800), (900, 46900), (860, 46860), (820, 46820), (790, 46790)],  # Jeollanam-do
    47: [(290, 47290), (130, 47130), (830, 47830), (190, 47190), (150, 47150), (280, 47280), (920, 47920), (250, 47250), (840, 47840), (170, 47170), (770, 47770), (760, 47760), 
         (210, 47210), (230, 47230), (900, 47900), (940, 47940), (930, 47930), (730, 47730), (820, 47820), (750, 47750), (850, 47850), (111, 47111), (113, 47113)],  # Gyeongsangbuk-do
    48: [(310, 48310), (880, 48880), (820, 48820), (250, 48250), (840, 48840), (270, 48270), (240, 48240), (860, 48860), (330, 48330), (720, 48720), (170, 48170), (740, 48740), 
         (125, 48125), (127, 48127), (123, 48123), (121, 48121), (129, 48129), (220, 48220), (850, 48850), (730, 48730), (870, 48870), (890, 48890)],  # Gyeongsangnam-do
    50: [(130, 50130), (110, 50110)]  # Jeju

"""

# 
year = [2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]
dict_siDo_guGun = {
    45: [(790, 45790), (130, 45130), (210, 45210), (190, 45190), (730, 45730), (800, 45800), (770, 45770), (710, 45710), (140, 45140), (750, 45750), (740, 45740), (113, 45113), 
         (111, 45111), (180, 45180), (720, 45720)],  # Jeollabuk-do(~2022)
    52: [(790, 45790), (130, 45130), (210, 45210), (190, 45190), (730, 45730), (800, 45800), (770, 45770), (710, 45710), (140, 45140), (750, 45750), (740, 45740), (113, 45113), 
         (111, 45111), (180, 45180), (720, 45720)],  # Jeollabuk-do(2023~)
}


#"""
url = 'http://apis.data.go.kr/B552061/frequentzoneOldman/getRestFrequentzoneOldman'
params ={'serviceKey' : 'MgRsN4A+3xU4NXnV0jJIQTox/qaMx2CCurLdhtGeWKz4IhCu4yRCf3BwIzL2V6yQmza5+F8jJQVh1dFjycbIcw==', 
        'searchYearCd' : '2017', 
        'siDo' : '11', 
        'guGun' : '320', 
        'type' : 'json', 
        'numOfRows' : '10', 
        'pageNo' : '1' }

#dict_siDo_guGun = {11:[(740, 11740)]}
#"""

data = []

for y in year :
    for sido in tqdm(dict_siDo_guGun.keys(), desc="now"):
          if y > 2022 and (sido == 42 or sido == 45):
               continue
          if y < 2023 and (sido == 51 or sido == 52):
               continue

          for (gugun, gid) in dict_siDo_guGun[sido]:
               params['searchYearCd'] = str(y)
               params['siDo'] = str(sido)
               params['guGun'] = str(gugun)

               response = requests.get(url, params=params)
               df = pd.DataFrame(response.json())

               series = df['items']

               for acd_list in series:
                    for acd in acd_list:
                         l = [y, gid, acd['occrrnc_cnt'], acd['lo_crd'], acd['la_crd']]
                         data.append(l)


with open('oldman_accident.txt', 'w') as f:
    for d in data :
          f.write(f"{d[0]} {d[1]} {d[2]} {d[3]} {d[4]}\n")